{
  "openapi": "3.1.0",
  "info": {
    "title": "Blitz API",
    "description": "AI-Powered SaaS Platform for Affiliate Marketing Campaign Generation",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Health"],
        "summary": "Root",
        "description": "Root endpoint - health check.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health Check",
        "description": "Detailed health check.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register User",
        "description": "Register a new user.",
        "operationId": "register_user_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login",
        "description": "Login and receive access token.",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLogin" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get Me",
        "description": "Get current user information.",
        "operationId": "get_me_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserResponse" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/campaigns": {
      "post": {
        "tags": ["Campaigns"],
        "summary": "Create Campaign",
        "description": "Create a new campaign.",
        "operationId": "create_campaign_api_campaigns_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Campaigns"],
        "summary": "List Campaigns",
        "description": "List all campaigns for the current user.",
        "operationId": "list_campaigns_api_campaigns_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CampaignResponse" },
                  "title": "Response List Campaigns Api Campaigns Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/{campaign_id}": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Get Campaign",
        "description": "Get a specific campaign.",
        "operationId": "get_campaign_api_campaigns__campaign_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Campaigns"],
        "summary": "Update Campaign",
        "description": "Update a campaign.",
        "operationId": "update_campaign_api_campaigns__campaign_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Campaigns"],
        "summary": "Delete Campaign",
        "description": "Delete a campaign.",
        "operationId": "delete_campaign_api_campaigns__campaign_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/campaigns/{campaign_id}/analytics": {
      "get": {
        "tags": ["Campaigns"],
        "summary": "Get Campaign Analytics",
        "description": "Get analytics for a campaign.",
        "operationId": "get_campaign_analytics_api_campaigns__campaign_id__analytics_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CampaignAnalytics" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/content/generate": {
      "post": {
        "tags": ["content"],
        "summary": "Generate Content",
        "description": "Generate new content for a campaign.",
        "operationId": "generate_content_api_content_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentGenerateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/content/campaign/{campaign_id}": {
      "get": {
        "tags": ["content"],
        "summary": "List Campaign Content",
        "description": "List all generated content for a campaign.",
        "operationId": "list_campaign_content_api_content_campaign__campaign_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Content Type" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 50, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ContentResponse" },
                  "title": "Response List Campaign Content Api Content Campaign  Campaign Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/content/{content_id}/refine": {
      "post": {
        "tags": ["content"],
        "summary": "Refine Content",
        "description": "Refine existing content based on feedback.",
        "operationId": "refine_content_api_content__content_id__refine_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Content Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContentRefineRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContentResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/content/{content_id}/variations": {
      "post": {
        "tags": ["content"],
        "summary": "Create Variations",
        "description": "Create variations of existing content.",
        "operationId": "create_variations_api_content__content_id__variations_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Content Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentVariationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ContentResponse" },
                  "title": "Response Create Variations Api Content  Content Id  Variations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/content/{content_id}": {
      "delete": {
        "tags": ["content"],
        "summary": "Delete Content",
        "description": "Delete generated content.",
        "operationId": "delete_content_api_content__content_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Content Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/intelligence/compile": {
      "post": {
        "tags": ["intelligence"],
        "summary": "Compile Intelligence",
        "description": "Compile intelligence for a product/campaign.",
        "operationId": "compile_intelligence_api_intelligence_compile_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntelligenceCompileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/intelligence/campaign/{campaign_id}": {
      "get": {
        "tags": ["intelligence"],
        "summary": "Get Campaign Intelligence",
        "description": "Get compiled intelligence for a campaign.",
        "operationId": "get_campaign_intelligence_api_intelligence_campaign__campaign_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntelligenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/intelligence/knowledge-base": {
      "post": {
        "tags": ["intelligence"],
        "summary": "Add Knowledge Base Entry",
        "description": "Add entry to knowledge base and RAG system.",
        "operationId": "add_knowledge_base_entry_api_intelligence_knowledge_base_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/KnowledgeBaseEntry" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/KnowledgeBaseEntry" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["intelligence"],
        "summary": "List Knowledge Base",
        "description": "List knowledge base entries.",
        "operationId": "list_knowledge_base_api_intelligence_knowledge_base_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Content Type" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 50, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseEntry"
                  },
                  "title": "Response List Knowledge Base Api Intelligence Knowledge Base Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/intelligence/rag/query": {
      "post": {
        "tags": ["intelligence"],
        "summary": "Query Rag",
        "description": "Query the RAG system for relevant context.",
        "operationId": "query_rag_api_intelligence_rag_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RAGQueryRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RAGQueryResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/intelligence/knowledge-base/{entry_id}": {
      "delete": {
        "tags": ["intelligence"],
        "summary": "Delete Knowledge Base Entry",
        "description": "Delete a knowledge base entry.",
        "operationId": "delete_knowledge_base_entry_api_intelligence_knowledge_base__entry_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Entry Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/compliance/check": {
      "post": {
        "tags": ["Compliance"],
        "summary": "Check Compliance",
        "description": "Check content for compliance with FTC and affiliate network guidelines.",
        "operationId": "check_compliance_api_compliance_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceCheckRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceCheckResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/compliance/ftc-guidelines": {
      "get": {
        "tags": ["Compliance"],
        "summary": "Get Ftc Guidelines",
        "description": "Get FTC affiliate marketing guidelines.",
        "operationId": "get_ftc_guidelines_api_compliance_ftc_guidelines_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FTCGuidelinesResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/admin/ai-router/config": {
      "get": {
        "tags": ["Admin - AI Router"],
        "summary": "Get Config",
        "operationId": "get_config_api_admin_ai_router_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIRouterConfigResponse"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "put": {
        "tags": ["Admin - AI Router"],
        "summary": "Update Config",
        "operationId": "update_config_api_admin_ai_router_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AIRouterConfigPayload" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIRouterConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/admin/ai-router/health": {
      "get": {
        "tags": ["Admin - AI Router"],
        "summary": "Health Snapshot",
        "operationId": "health_snapshot_api_admin_ai_router_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "AIRouterConfigPayload": {
        "properties": {
          "chat_fast": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Chat Fast"
          },
          "chat_quality": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Chat Quality"
          },
          "embeddings": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Embeddings"
          },
          "vision": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Vision"
          },
          "image_gen": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Image Gen"
          }
        },
        "type": "object",
        "title": "AIRouterConfigPayload"
      },
      "AIRouterConfigResponse": {
        "properties": {
          "config": {
            "additionalProperties": {
              "items": { "type": "string" },
              "type": "array"
            },
            "type": "object",
            "title": "Config"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": ["config"],
        "title": "AIRouterConfigResponse"
      },
      "CampaignAnalytics": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "total_content": { "type": "integer", "title": "Total Content" },
          "content_by_type": {
            "additionalProperties": { "type": "integer" },
            "type": "object",
            "title": "Content By Type"
          },
          "compliance_score": { "type": "number", "title": "Compliance Score" },
          "last_generated": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Generated"
          }
        },
        "type": "object",
        "required": [
          "campaign_id",
          "total_content",
          "content_by_type",
          "compliance_score",
          "last_generated"
        ],
        "title": "CampaignAnalytics"
      },
      "CampaignCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "product_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Product Url"
          },
          "affiliate_network": {
            "type": "string",
            "title": "Affiliate Network"
          },
          "target_audience": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Target Audience"
          },
          "marketing_angles": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/MarketingAngle" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Marketing Angles",
            "default": []
          }
        },
        "type": "object",
        "required": ["name", "product_url", "affiliate_network"],
        "title": "CampaignCreate"
      },
      "CampaignResponse": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "product_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Product Url"
          },
          "affiliate_network": {
            "type": "string",
            "title": "Affiliate Network"
          },
          "target_audience": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Target Audience"
          },
          "marketing_angles": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/MarketingAngle" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Marketing Angles",
            "default": []
          },
          "id": { "type": "integer", "title": "Id" },
          "user_id": { "type": "integer", "title": "User Id" },
          "status": { "$ref": "#/components/schemas/CampaignStatus" },
          "intelligence_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Intelligence Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "product_url",
          "affiliate_network",
          "id",
          "user_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "CampaignResponse"
      },
      "CampaignStatus": {
        "type": "string",
        "enum": ["draft", "active", "paused", "completed"],
        "title": "CampaignStatus"
      },
      "CampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "status": {
            "anyOf": [
              { "$ref": "#/components/schemas/CampaignStatus" },
              { "type": "null" }
            ]
          },
          "target_audience": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Target Audience"
          },
          "marketing_angles": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/MarketingAngle" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Marketing Angles"
          }
        },
        "type": "object",
        "title": "CampaignUpdate"
      },
      "ComplianceCheckRequest": {
        "properties": {
          "content": { "type": "string", "title": "Content" },
          "content_type": { "$ref": "#/components/schemas/ContentType" },
          "affiliate_network": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Affiliate Network"
          }
        },
        "type": "object",
        "required": ["content", "content_type"],
        "title": "ComplianceCheckRequest"
      },
      "ComplianceCheckResponse": {
        "properties": {
          "status": { "$ref": "#/components/schemas/ComplianceStatus" },
          "score": { "type": "number", "title": "Score" },
          "issues": {
            "items": { "type": "object" },
            "type": "array",
            "title": "Issues"
          },
          "suggestions": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Suggestions"
          },
          "ftc_compliance": { "type": "boolean", "title": "Ftc Compliance" },
          "network_compliance": {
            "type": "boolean",
            "title": "Network Compliance"
          }
        },
        "type": "object",
        "required": [
          "status",
          "score",
          "issues",
          "suggestions",
          "ftc_compliance",
          "network_compliance"
        ],
        "title": "ComplianceCheckResponse"
      },
      "ComplianceStatus": {
        "type": "string",
        "enum": ["compliant", "warning", "violation"],
        "title": "ComplianceStatus"
      },
      "ContentGenerateRequest": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "content_type": { "$ref": "#/components/schemas/ContentType" },
          "marketing_angle": { "$ref": "#/components/schemas/MarketingAngle" },
          "additional_context": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Additional Context"
          },
          "tone": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tone",
            "default": "professional"
          },
          "length": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Length",
            "default": "medium"
          }
        },
        "type": "object",
        "required": ["campaign_id", "content_type", "marketing_angle"],
        "title": "ContentGenerateRequest"
      },
      "ContentRefineRequest": {
        "properties": {
          "content_id": { "type": "integer", "title": "Content Id" },
          "refinement_instructions": {
            "type": "string",
            "title": "Refinement Instructions"
          }
        },
        "type": "object",
        "required": ["content_id", "refinement_instructions"],
        "title": "ContentRefineRequest"
      },
      "ContentResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "content_type": { "$ref": "#/components/schemas/ContentType" },
          "marketing_angle": { "$ref": "#/components/schemas/MarketingAngle" },
          "content_data": { "type": "object", "title": "Content Data" },
          "compliance_status": {
            "$ref": "#/components/schemas/ComplianceStatus"
          },
          "compliance_notes": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Compliance Notes"
          },
          "version": { "type": "integer", "title": "Version" },
          "parent_content_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Parent Content Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "campaign_id",
          "content_type",
          "marketing_angle",
          "content_data",
          "compliance_status",
          "version",
          "created_at"
        ],
        "title": "ContentResponse"
      },
      "ContentType": {
        "type": "string",
        "enum": [
          "article",
          "email",
          "video_script",
          "social_post",
          "landing_page",
          "ad_copy"
        ],
        "title": "ContentType"
      },
      "ContentVariationRequest": {
        "properties": {
          "content_id": { "type": "integer", "title": "Content Id" },
          "num_variations": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Num Variations",
            "default": 3
          },
          "variation_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variation Type",
            "default": "tone"
          }
        },
        "type": "object",
        "required": ["content_id"],
        "title": "ContentVariationRequest"
      },
      "FTCGuidelinesResponse": {
        "properties": {
          "guidelines": {
            "items": {
              "additionalProperties": { "type": "string" },
              "type": "object"
            },
            "type": "array",
            "title": "Guidelines"
          },
          "last_updated": { "type": "string", "title": "Last Updated" },
          "source": { "type": "string", "title": "Source" }
        },
        "type": "object",
        "required": ["guidelines", "last_updated", "source"],
        "title": "FTCGuidelinesResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IntelligenceCompileRequest": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "deep_research": {
            "type": "boolean",
            "title": "Deep Research",
            "default": false
          },
          "include_competitors": {
            "type": "boolean",
            "title": "Include Competitors",
            "default": true
          }
        },
        "type": "object",
        "required": ["campaign_id"],
        "title": "IntelligenceCompileRequest"
      },
      "IntelligenceResponse": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "product_info": { "type": "object", "title": "Product Info" },
          "competitor_analysis": {
            "anyOf": [
              { "items": { "type": "object" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Competitor Analysis"
          },
          "market_insights": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Market Insights"
          },
          "recommended_angles": {
            "items": { "$ref": "#/components/schemas/MarketingAngle" },
            "type": "array",
            "title": "Recommended Angles"
          },
          "compiled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Compiled At"
          }
        },
        "type": "object",
        "required": [
          "campaign_id",
          "product_info",
          "recommended_angles",
          "compiled_at"
        ],
        "title": "IntelligenceResponse"
      },
      "KnowledgeBaseEntry": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "content": { "type": "string", "title": "Content" },
          "meta_data": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Meta Data"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              { "type": "null" }
            ],
            "title": "Source Url"
          }
        },
        "type": "object",
        "required": ["campaign_id", "content"],
        "title": "KnowledgeBaseEntry"
      },
      "MarketingAngle": {
        "type": "string",
        "enum": [
          "problem_solution",
          "transformation",
          "scarcity",
          "authority",
          "social_proof",
          "comparison",
          "story"
        ],
        "title": "MarketingAngle"
      },
      "MessageResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message" },
          "detail": { "anyOf": [{}, { "type": "null" }], "title": "Detail" }
        },
        "type": "object",
        "required": ["message"],
        "title": "MessageResponse"
      },
      "RAGQueryRequest": {
        "properties": {
          "campaign_id": { "type": "integer", "title": "Campaign Id" },
          "query": { "type": "string", "title": "Query" },
          "top_k": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Top K",
            "default": 5
          }
        },
        "type": "object",
        "required": ["campaign_id", "query"],
        "title": "RAGQueryRequest"
      },
      "RAGQueryResponse": {
        "properties": {
          "query": { "type": "string", "title": "Query" },
          "results": {
            "items": { "type": "object" },
            "type": "array",
            "title": "Results"
          },
          "context_used": { "type": "string", "title": "Context Used" }
        },
        "type": "object",
        "required": ["query", "results", "context_used"],
        "title": "RAGQueryResponse"
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "Token"
      },
      "UserCreate": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Full Name"
          },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserLogin"
      },
      "UserResponse": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" },
          "full_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Full Name"
          },
          "id": { "type": "integer", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["email", "id", "created_at"],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "/api/auth/login" } }
      }
    }
  }
}
